openapi: 3.0.3
info:
  title: ARCHIVE
  description: Архив
  version: v0.0.1
servers:
  - url: http://localhost:8080/api/
    description: LOCAL
tags:
  - name: Documents
    description: Документы
paths:
  /v1/docs:
    post:
      tags:
        - Documents
      summary: Сохранение документа
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDto'
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '404':
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    get:
      x-spring-paginated: true
      tags:
        - Documents
      summary: Получение документов по фильтру
      operationId: getByFilter
      parameters:
        - name: filter
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/DocumentFilter'
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDocs'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '404':
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /v1/docs/{id}:
    get:
      tags:
        - Documents
      summary: Получение документа
      operationId: get
      parameters:
        - name: id
          description: ID документа
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '404':
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    put:
      tags:
        - Documents
      summary: Редактирование документа
      operationId: edit
      parameters:
        - name: id
          description: ID документа
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDto'
        required: true
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '404':
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    delete:
      tags:
        - Documents
      summary: Удаление документа
      operationId: delete
      parameters:
        - name: id
          in: path
          description: ID документа
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Успешный запрос
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '404':
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
  /v1/docs/{id}/file:
    put:
      tags:
        - Documents
      summary: Сохранение файла
      operationId: saveFile
      parameters:
        - name: id
          description: ID документа
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - doc
              type: object
              properties:
                doc:
                  type: string
                  description: Документ
                  format: binary
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDto'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '404':
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    get:
      tags:
        - Documents
      summary: Скачать файл
      operationId: download
      parameters:
        - name: id
          in: path
          description: ID документа
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Успешный запрос
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '404':
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
components:
  schemas:
    ProblemDetail:
      type: object
      properties:
        detail:
          type: string
          description: Сообщение об ошибке
    DocumentDto:
      type: object
      properties:
        id:
          type: string
          description: ID документа
          format: uuid
          readOnly: true
        number:
          type: integer
          description: Рег. №
        author:
          type: string
          description: Автор
        name:
          type: string
          description: Название документа
        regDate:
          type: string
          format: date
        description:
          type: string
          description: Описание (содержание)
    StreamingResponseBody:
      type: object
    DocumentFilter:
      type: object
      properties:
        name:
          type: string
          description: Название документа
        author:
          type: array
          uniqueItems: true
          items:
            type: string
            description: Автор
        ext:
          type: array
          items:
            type: string
            description: Расширение файла
        number:
          type: array
          items:
            type: integer
            description: Номера документов
    PagedDocs:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/DocumentDto'
        pageable:
          $ref: '#/components/schemas/Pageable'
        totalElements:
          type: integer
          format: int64
        last:
          type: boolean
        totalPages:
          type: integer
        number:
          type: integer
        size:
          type: integer
        sort:
          $ref: '#/components/schemas/Sort'
        numberOfElements:
          type: integer
        first:
          type: boolean
        empty:
          type: boolean
    Pageable:
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/Sort'
        offset:
          type: integer
        pageSize:
          type: integer
        pageNumber:
          type: integer
        paged:
          type: boolean
        unpaged:
          type: boolean
    Sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean