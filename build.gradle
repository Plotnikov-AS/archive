plugins {
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
    id 'org.liquibase.gradle' version '2.2.0'
    id 'org.openapi.generator' version '6.6.0'
}

group = 'ru.mai'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.modelmapper:modelmapper:3.1.1'
    implementation 'org.hibernate:hibernate-validator:8.0.0.Final'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.14.2'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.liquibase:liquibase-core'
    implementation 'io.minio:minio:8.5.7'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2"

    compileOnly 'org.projectlombok:lombok'
    compileOnly 'org.hibernate:hibernate-jpamodelgen:6.2.0.Final'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
}

sourceSets {
    generated {
        java {
            srcDirs = ['src/generated/java', 'ru/mai/archive/generated']
        }
    }
}

compileJava.dependsOn(tasks.openApiGenerate)

openApiGenerate {
    importMappings.put("Sort", "org.springframework.data.domain.Sort")

    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/static/API.yml".toString()
    outputDir = "$rootDir/src/main/java".toString()
    apiPackage = "ru.mai.archive.generated.api"
    modelPackage = "ru.mai.archive.generated.dto"
    configOptions.put("dateLibrary", "java8")
    configOptions.put("useTags", "true")
    configOptions.put("interfaceOnly", "true")
    configOptions.put("openApiNullable", "false")
    configOptions.put("useOptional", "true")
    configOptions.put("useSpringBoot3", "true")
    configOptions.put("sourceFolder", "")
}